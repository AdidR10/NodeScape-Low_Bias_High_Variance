name: CI/CD Pipeline

on:
  push:
    branches: [ main , dev ]
  pull_request:
    branches: [ main , dev ]

env:
  DOCKER_IMAGE: nodescape-graph-visualizer

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test -- --watchAll=false --passWithNoTests
      
    - name: Build application
      run: npm run build

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Generate version tags
      id: version
      run: |
        # Get branch name and run number
        BRANCH_NAME=${GITHUB_REF#refs/heads/}
        RUN_NUMBER=${{ github.run_number }}
        
        # Create version based on branch and run number
        if [[ "$BRANCH_NAME" == "main" ]]; then
          VERSION="1.0.$RUN_NUMBER"
          LATEST_TAG="latest"
        elif [[ "$BRANCH_NAME" == "dev" ]]; then
          VERSION="0.1.$RUN_NUMBER"
          LATEST_TAG="dev"
        else
          VERSION="0.0.$RUN_NUMBER"
          LATEST_TAG="dev"
        fi
        
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
        echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
        echo "run_number=$RUN_NUMBER" >> $GITHUB_OUTPUT
        
        echo "Generated version: $VERSION"
        echo "Branch: $BRANCH_NAME"
        echo "Run number: $RUN_NUMBER"
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.version }}
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.latest_tag }}
        cache-from: type=gha
        cache-to: type=gha,mode=max 